{"ast":null,"code":"(function () {\n  var AcronymResult, computeScore, emptyAcronymResult, isAcronymFullWord, isMatch, isSeparator, isWordEnd, isWordStart, miss_coeff, pos_bonus, scoreAcronyms, scoreCharacter, scoreConsecutives, scoreExact, scoreExactMatch, scorePattern, scorePosition, scoreSize, tau_size, wm;\n  wm = 150;\n  pos_bonus = 20;\n  tau_size = 150;\n  miss_coeff = 0.75;\n\n  exports.score = function (string, query, options) {\n    var allowErrors, preparedQuery, score, string_lw;\n    preparedQuery = options.preparedQuery, allowErrors = options.allowErrors;\n\n    if (!(allowErrors || isMatch(string, preparedQuery.core_lw, preparedQuery.core_up))) {\n      return 0;\n    }\n\n    string_lw = string.toLowerCase();\n    score = computeScore(string, string_lw, preparedQuery);\n    return Math.ceil(score);\n  };\n\n  exports.isMatch = isMatch = function (subject, query_lw, query_up) {\n    var i, j, m, n, qj_lw, qj_up, si;\n    m = subject.length;\n    n = query_lw.length;\n\n    if (!m || n > m) {\n      return false;\n    }\n\n    i = -1;\n    j = -1;\n\n    while (++j < n) {\n      qj_lw = query_lw.charCodeAt(j);\n      qj_up = query_up.charCodeAt(j);\n\n      while (++i < m) {\n        si = subject.charCodeAt(i);\n\n        if (si === qj_lw || si === qj_up) {\n          break;\n        }\n      }\n\n      if (i === m) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  exports.computeScore = computeScore = function (subject, subject_lw, preparedQuery) {\n    var acro, acro_score, align, csc_diag, csc_row, csc_score, csc_should_rebuild, i, j, m, miss_budget, miss_left, n, pos, query, query_lw, record_miss, score, score_diag, score_row, score_up, si_lw, start, sz;\n    query = preparedQuery.query;\n    query_lw = preparedQuery.query_lw;\n    m = subject.length;\n    n = query.length;\n    acro = scoreAcronyms(subject, subject_lw, query, query_lw);\n    acro_score = acro.score;\n\n    if (acro.count === n) {\n      return scoreExact(n, m, acro_score, acro.pos);\n    }\n\n    pos = subject_lw.indexOf(query_lw);\n\n    if (pos > -1) {\n      return scoreExactMatch(subject, subject_lw, query, query_lw, pos, n, m);\n    }\n\n    score_row = new Array(n);\n    csc_row = new Array(n);\n    sz = scoreSize(n, m);\n    miss_budget = Math.ceil(miss_coeff * n) + 5;\n    miss_left = miss_budget;\n    csc_should_rebuild = true;\n    j = -1;\n\n    while (++j < n) {\n      score_row[j] = 0;\n      csc_row[j] = 0;\n    }\n\n    i = -1;\n\n    while (++i < m) {\n      si_lw = subject_lw[i];\n\n      if (!si_lw.charCodeAt(0) in preparedQuery.charCodes) {\n        if (csc_should_rebuild) {\n          j = -1;\n\n          while (++j < n) {\n            csc_row[j] = 0;\n          }\n\n          csc_should_rebuild = false;\n        }\n\n        continue;\n      }\n\n      score = 0;\n      score_diag = 0;\n      csc_diag = 0;\n      record_miss = true;\n      csc_should_rebuild = true;\n      j = -1;\n\n      while (++j < n) {\n        score_up = score_row[j];\n\n        if (score_up > score) {\n          score = score_up;\n        }\n\n        csc_score = 0;\n\n        if (query_lw[j] === si_lw) {\n          start = isWordStart(i, subject, subject_lw);\n          csc_score = csc_diag > 0 ? csc_diag : scoreConsecutives(subject, subject_lw, query, query_lw, i, j, start);\n          align = score_diag + scoreCharacter(i, j, start, acro_score, csc_score);\n\n          if (align > score) {\n            score = align;\n            miss_left = miss_budget;\n          } else {\n            if (record_miss && --miss_left <= 0) {\n              return Math.max(score, score_row[n - 1]) * sz;\n            }\n\n            record_miss = false;\n          }\n        }\n\n        score_diag = score_up;\n        csc_diag = csc_row[j];\n        csc_row[j] = csc_score;\n        score_row[j] = score;\n      }\n    }\n\n    score = score_row[n - 1];\n    return score * sz;\n  };\n\n  exports.isWordStart = isWordStart = function (pos, subject, subject_lw) {\n    var curr_s, prev_s;\n\n    if (pos === 0) {\n      return true;\n    }\n\n    curr_s = subject[pos];\n    prev_s = subject[pos - 1];\n    return isSeparator(prev_s) || curr_s !== subject_lw[pos] && prev_s === subject_lw[pos - 1];\n  };\n\n  exports.isWordEnd = isWordEnd = function (pos, subject, subject_lw, len) {\n    var curr_s, next_s;\n\n    if (pos === len - 1) {\n      return true;\n    }\n\n    curr_s = subject[pos];\n    next_s = subject[pos + 1];\n    return isSeparator(next_s) || curr_s === subject_lw[pos] && next_s !== subject_lw[pos + 1];\n  };\n\n  isSeparator = function (c) {\n    return c === ' ' || c === '.' || c === '-' || c === '_' || c === '/' || c === '\\\\';\n  };\n\n  scorePosition = function (pos) {\n    var sc;\n\n    if (pos < pos_bonus) {\n      sc = pos_bonus - pos;\n      return 100 + sc * sc;\n    } else {\n      return Math.max(100 + pos_bonus - pos, 0);\n    }\n  };\n\n  exports.scoreSize = scoreSize = function (n, m) {\n    return tau_size / (tau_size + Math.abs(m - n));\n  };\n\n  scoreExact = function (n, m, quality, pos) {\n    return 2 * n * (wm * quality + scorePosition(pos)) * scoreSize(n, m);\n  };\n\n  exports.scorePattern = scorePattern = function (count, len, sameCase, start, end) {\n    var bonus, sz;\n    sz = count;\n    bonus = 6;\n\n    if (sameCase === count) {\n      bonus += 2;\n    }\n\n    if (start) {\n      bonus += 3;\n    }\n\n    if (end) {\n      bonus += 1;\n    }\n\n    if (count === len) {\n      if (start) {\n        if (sameCase === len) {\n          sz += 2;\n        } else {\n          sz += 1;\n        }\n      }\n\n      if (end) {\n        bonus += 1;\n      }\n    }\n\n    return sameCase + sz * (sz + bonus);\n  };\n\n  exports.scoreCharacter = scoreCharacter = function (i, j, start, acro_score, csc_score) {\n    var posBonus;\n    posBonus = scorePosition(i);\n\n    if (start) {\n      return posBonus + wm * ((acro_score > csc_score ? acro_score : csc_score) + 10);\n    }\n\n    return posBonus + wm * csc_score;\n  };\n\n  exports.scoreConsecutives = scoreConsecutives = function (subject, subject_lw, query, query_lw, i, j, startOfWord) {\n    var k, m, mi, n, nj, sameCase, sz;\n    m = subject.length;\n    n = query.length;\n    mi = m - i;\n    nj = n - j;\n    k = mi < nj ? mi : nj;\n    sameCase = 0;\n    sz = 0;\n\n    if (query[j] === subject[i]) {\n      sameCase++;\n    }\n\n    while (++sz < k && query_lw[++j] === subject_lw[++i]) {\n      if (query[j] === subject[i]) {\n        sameCase++;\n      }\n    }\n\n    if (sz < k) {\n      i--;\n    }\n\n    if (sz === 1) {\n      return 1 + 2 * sameCase;\n    }\n\n    return scorePattern(sz, n, sameCase, startOfWord, isWordEnd(i, subject, subject_lw, m));\n  };\n\n  exports.scoreExactMatch = scoreExactMatch = function (subject, subject_lw, query, query_lw, pos, n, m) {\n    var end, i, pos2, sameCase, start;\n    start = isWordStart(pos, subject, subject_lw);\n\n    if (!start) {\n      pos2 = subject_lw.indexOf(query_lw, pos + 1);\n\n      if (pos2 > -1) {\n        start = isWordStart(pos2, subject, subject_lw);\n\n        if (start) {\n          pos = pos2;\n        }\n      }\n    }\n\n    i = -1;\n    sameCase = 0;\n\n    while (++i < n) {\n      if (query[pos + i] === subject[i]) {\n        sameCase++;\n      }\n    }\n\n    end = isWordEnd(pos + n - 1, subject, subject_lw, m);\n    return scoreExact(n, m, scorePattern(n, n, sameCase, start, end), pos);\n  };\n\n  AcronymResult = function () {\n    function AcronymResult(score, pos, count) {\n      this.score = score;\n      this.pos = pos;\n      this.count = count;\n    }\n\n    return AcronymResult;\n  }();\n\n  emptyAcronymResult = new AcronymResult(0, 0.1, 0);\n\n  exports.scoreAcronyms = scoreAcronyms = function (subject, subject_lw, query, query_lw) {\n    var count, fullWord, i, j, m, n, qj_lw, sameCase, score, sepCount, sumPos;\n    m = subject.length;\n    n = query.length;\n\n    if (!(m > 1 && n > 1)) {\n      return emptyAcronymResult;\n    }\n\n    count = 0;\n    sepCount = 0;\n    sumPos = 0;\n    sameCase = 0;\n    i = -1;\n    j = -1;\n\n    while (++j < n) {\n      qj_lw = query_lw[j];\n\n      if (isSeparator(qj_lw)) {\n        i = subject_lw.indexOf(qj_lw, i + 1);\n\n        if (i > -1) {\n          sepCount++;\n          continue;\n        } else {\n          break;\n        }\n      }\n\n      while (++i < m) {\n        if (qj_lw === subject_lw[i] && isWordStart(i, subject, subject_lw)) {\n          if (query[j] === subject[i]) {\n            sameCase++;\n          }\n\n          sumPos += i;\n          count++;\n          break;\n        }\n      }\n\n      if (i === m) {\n        break;\n      }\n    }\n\n    if (count < 2) {\n      return emptyAcronymResult;\n    }\n\n    fullWord = count === n ? isAcronymFullWord(subject, subject_lw, query, count) : false;\n    score = scorePattern(count, n, sameCase, true, fullWord);\n    return new AcronymResult(score, sumPos / count, count + sepCount);\n  };\n\n  isAcronymFullWord = function (subject, subject_lw, query, nbAcronymInQuery) {\n    var count, i, m, n;\n    m = subject.length;\n    n = query.length;\n    count = 0;\n\n    if (m > 12 * n) {\n      return false;\n    }\n\n    i = -1;\n\n    while (++i < m) {\n      if (isWordStart(i, subject, subject_lw) && ++count > nbAcronymInQuery) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}).call(this);","map":{"version":3,"sources":["D:/ANSI - LI/MyMPS/v2/mps_new_version_dev/node_modules/fuzzaldrin-plus/lib/scorer.js"],"names":["AcronymResult","computeScore","emptyAcronymResult","isAcronymFullWord","isMatch","isSeparator","isWordEnd","isWordStart","miss_coeff","pos_bonus","scoreAcronyms","scoreCharacter","scoreConsecutives","scoreExact","scoreExactMatch","scorePattern","scorePosition","scoreSize","tau_size","wm","exports","score","string","query","options","allowErrors","preparedQuery","string_lw","core_lw","core_up","toLowerCase","Math","ceil","subject","query_lw","query_up","i","j","m","n","qj_lw","qj_up","si","length","charCodeAt","subject_lw","acro","acro_score","align","csc_diag","csc_row","csc_score","csc_should_rebuild","miss_budget","miss_left","pos","record_miss","score_diag","score_row","score_up","si_lw","start","sz","count","indexOf","Array","charCodes","max","curr_s","prev_s","len","next_s","c","sc","abs","quality","sameCase","end","bonus","posBonus","startOfWord","k","mi","nj","pos2","fullWord","sepCount","sumPos","nbAcronymInQuery","call"],"mappings":"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","sourcesContent":["(function() {\r\n  var AcronymResult, computeScore, emptyAcronymResult, isAcronymFullWord, isMatch, isSeparator, isWordEnd, isWordStart, miss_coeff, pos_bonus, scoreAcronyms, scoreCharacter, scoreConsecutives, scoreExact, scoreExactMatch, scorePattern, scorePosition, scoreSize, tau_size, wm;\r\n\r\n  wm = 150;\r\n\r\n  pos_bonus = 20;\r\n\r\n  tau_size = 150;\r\n\r\n  miss_coeff = 0.75;\r\n\r\n  exports.score = function(string, query, options) {\r\n    var allowErrors, preparedQuery, score, string_lw;\r\n    preparedQuery = options.preparedQuery, allowErrors = options.allowErrors;\r\n    if (!(allowErrors || isMatch(string, preparedQuery.core_lw, preparedQuery.core_up))) {\r\n      return 0;\r\n    }\r\n    string_lw = string.toLowerCase();\r\n    score = computeScore(string, string_lw, preparedQuery);\r\n    return Math.ceil(score);\r\n  };\r\n\r\n  exports.isMatch = isMatch = function(subject, query_lw, query_up) {\r\n    var i, j, m, n, qj_lw, qj_up, si;\r\n    m = subject.length;\r\n    n = query_lw.length;\r\n    if (!m || n > m) {\r\n      return false;\r\n    }\r\n    i = -1;\r\n    j = -1;\r\n    while (++j < n) {\r\n      qj_lw = query_lw.charCodeAt(j);\r\n      qj_up = query_up.charCodeAt(j);\r\n      while (++i < m) {\r\n        si = subject.charCodeAt(i);\r\n        if (si === qj_lw || si === qj_up) {\r\n          break;\r\n        }\r\n      }\r\n      if (i === m) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  exports.computeScore = computeScore = function(subject, subject_lw, preparedQuery) {\r\n    var acro, acro_score, align, csc_diag, csc_row, csc_score, csc_should_rebuild, i, j, m, miss_budget, miss_left, n, pos, query, query_lw, record_miss, score, score_diag, score_row, score_up, si_lw, start, sz;\r\n    query = preparedQuery.query;\r\n    query_lw = preparedQuery.query_lw;\r\n    m = subject.length;\r\n    n = query.length;\r\n    acro = scoreAcronyms(subject, subject_lw, query, query_lw);\r\n    acro_score = acro.score;\r\n    if (acro.count === n) {\r\n      return scoreExact(n, m, acro_score, acro.pos);\r\n    }\r\n    pos = subject_lw.indexOf(query_lw);\r\n    if (pos > -1) {\r\n      return scoreExactMatch(subject, subject_lw, query, query_lw, pos, n, m);\r\n    }\r\n    score_row = new Array(n);\r\n    csc_row = new Array(n);\r\n    sz = scoreSize(n, m);\r\n    miss_budget = Math.ceil(miss_coeff * n) + 5;\r\n    miss_left = miss_budget;\r\n    csc_should_rebuild = true;\r\n    j = -1;\r\n    while (++j < n) {\r\n      score_row[j] = 0;\r\n      csc_row[j] = 0;\r\n    }\r\n    i = -1;\r\n    while (++i < m) {\r\n      si_lw = subject_lw[i];\r\n      if (!si_lw.charCodeAt(0) in preparedQuery.charCodes) {\r\n        if (csc_should_rebuild) {\r\n          j = -1;\r\n          while (++j < n) {\r\n            csc_row[j] = 0;\r\n          }\r\n          csc_should_rebuild = false;\r\n        }\r\n        continue;\r\n      }\r\n      score = 0;\r\n      score_diag = 0;\r\n      csc_diag = 0;\r\n      record_miss = true;\r\n      csc_should_rebuild = true;\r\n      j = -1;\r\n      while (++j < n) {\r\n        score_up = score_row[j];\r\n        if (score_up > score) {\r\n          score = score_up;\r\n        }\r\n        csc_score = 0;\r\n        if (query_lw[j] === si_lw) {\r\n          start = isWordStart(i, subject, subject_lw);\r\n          csc_score = csc_diag > 0 ? csc_diag : scoreConsecutives(subject, subject_lw, query, query_lw, i, j, start);\r\n          align = score_diag + scoreCharacter(i, j, start, acro_score, csc_score);\r\n          if (align > score) {\r\n            score = align;\r\n            miss_left = miss_budget;\r\n          } else {\r\n            if (record_miss && --miss_left <= 0) {\r\n              return Math.max(score, score_row[n - 1]) * sz;\r\n            }\r\n            record_miss = false;\r\n          }\r\n        }\r\n        score_diag = score_up;\r\n        csc_diag = csc_row[j];\r\n        csc_row[j] = csc_score;\r\n        score_row[j] = score;\r\n      }\r\n    }\r\n    score = score_row[n - 1];\r\n    return score * sz;\r\n  };\r\n\r\n  exports.isWordStart = isWordStart = function(pos, subject, subject_lw) {\r\n    var curr_s, prev_s;\r\n    if (pos === 0) {\r\n      return true;\r\n    }\r\n    curr_s = subject[pos];\r\n    prev_s = subject[pos - 1];\r\n    return isSeparator(prev_s) || (curr_s !== subject_lw[pos] && prev_s === subject_lw[pos - 1]);\r\n  };\r\n\r\n  exports.isWordEnd = isWordEnd = function(pos, subject, subject_lw, len) {\r\n    var curr_s, next_s;\r\n    if (pos === len - 1) {\r\n      return true;\r\n    }\r\n    curr_s = subject[pos];\r\n    next_s = subject[pos + 1];\r\n    return isSeparator(next_s) || (curr_s === subject_lw[pos] && next_s !== subject_lw[pos + 1]);\r\n  };\r\n\r\n  isSeparator = function(c) {\r\n    return c === ' ' || c === '.' || c === '-' || c === '_' || c === '/' || c === '\\\\';\r\n  };\r\n\r\n  scorePosition = function(pos) {\r\n    var sc;\r\n    if (pos < pos_bonus) {\r\n      sc = pos_bonus - pos;\r\n      return 100 + sc * sc;\r\n    } else {\r\n      return Math.max(100 + pos_bonus - pos, 0);\r\n    }\r\n  };\r\n\r\n  exports.scoreSize = scoreSize = function(n, m) {\r\n    return tau_size / (tau_size + Math.abs(m - n));\r\n  };\r\n\r\n  scoreExact = function(n, m, quality, pos) {\r\n    return 2 * n * (wm * quality + scorePosition(pos)) * scoreSize(n, m);\r\n  };\r\n\r\n  exports.scorePattern = scorePattern = function(count, len, sameCase, start, end) {\r\n    var bonus, sz;\r\n    sz = count;\r\n    bonus = 6;\r\n    if (sameCase === count) {\r\n      bonus += 2;\r\n    }\r\n    if (start) {\r\n      bonus += 3;\r\n    }\r\n    if (end) {\r\n      bonus += 1;\r\n    }\r\n    if (count === len) {\r\n      if (start) {\r\n        if (sameCase === len) {\r\n          sz += 2;\r\n        } else {\r\n          sz += 1;\r\n        }\r\n      }\r\n      if (end) {\r\n        bonus += 1;\r\n      }\r\n    }\r\n    return sameCase + sz * (sz + bonus);\r\n  };\r\n\r\n  exports.scoreCharacter = scoreCharacter = function(i, j, start, acro_score, csc_score) {\r\n    var posBonus;\r\n    posBonus = scorePosition(i);\r\n    if (start) {\r\n      return posBonus + wm * ((acro_score > csc_score ? acro_score : csc_score) + 10);\r\n    }\r\n    return posBonus + wm * csc_score;\r\n  };\r\n\r\n  exports.scoreConsecutives = scoreConsecutives = function(subject, subject_lw, query, query_lw, i, j, startOfWord) {\r\n    var k, m, mi, n, nj, sameCase, sz;\r\n    m = subject.length;\r\n    n = query.length;\r\n    mi = m - i;\r\n    nj = n - j;\r\n    k = mi < nj ? mi : nj;\r\n    sameCase = 0;\r\n    sz = 0;\r\n    if (query[j] === subject[i]) {\r\n      sameCase++;\r\n    }\r\n    while (++sz < k && query_lw[++j] === subject_lw[++i]) {\r\n      if (query[j] === subject[i]) {\r\n        sameCase++;\r\n      }\r\n    }\r\n    if (sz < k) {\r\n      i--;\r\n    }\r\n    if (sz === 1) {\r\n      return 1 + 2 * sameCase;\r\n    }\r\n    return scorePattern(sz, n, sameCase, startOfWord, isWordEnd(i, subject, subject_lw, m));\r\n  };\r\n\r\n  exports.scoreExactMatch = scoreExactMatch = function(subject, subject_lw, query, query_lw, pos, n, m) {\r\n    var end, i, pos2, sameCase, start;\r\n    start = isWordStart(pos, subject, subject_lw);\r\n    if (!start) {\r\n      pos2 = subject_lw.indexOf(query_lw, pos + 1);\r\n      if (pos2 > -1) {\r\n        start = isWordStart(pos2, subject, subject_lw);\r\n        if (start) {\r\n          pos = pos2;\r\n        }\r\n      }\r\n    }\r\n    i = -1;\r\n    sameCase = 0;\r\n    while (++i < n) {\r\n      if (query[pos + i] === subject[i]) {\r\n        sameCase++;\r\n      }\r\n    }\r\n    end = isWordEnd(pos + n - 1, subject, subject_lw, m);\r\n    return scoreExact(n, m, scorePattern(n, n, sameCase, start, end), pos);\r\n  };\r\n\r\n  AcronymResult = (function() {\r\n    function AcronymResult(score, pos, count) {\r\n      this.score = score;\r\n      this.pos = pos;\r\n      this.count = count;\r\n    }\r\n\r\n    return AcronymResult;\r\n\r\n  })();\r\n\r\n  emptyAcronymResult = new AcronymResult(0, 0.1, 0);\r\n\r\n  exports.scoreAcronyms = scoreAcronyms = function(subject, subject_lw, query, query_lw) {\r\n    var count, fullWord, i, j, m, n, qj_lw, sameCase, score, sepCount, sumPos;\r\n    m = subject.length;\r\n    n = query.length;\r\n    if (!(m > 1 && n > 1)) {\r\n      return emptyAcronymResult;\r\n    }\r\n    count = 0;\r\n    sepCount = 0;\r\n    sumPos = 0;\r\n    sameCase = 0;\r\n    i = -1;\r\n    j = -1;\r\n    while (++j < n) {\r\n      qj_lw = query_lw[j];\r\n      if (isSeparator(qj_lw)) {\r\n        i = subject_lw.indexOf(qj_lw, i + 1);\r\n        if (i > -1) {\r\n          sepCount++;\r\n          continue;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n      while (++i < m) {\r\n        if (qj_lw === subject_lw[i] && isWordStart(i, subject, subject_lw)) {\r\n          if (query[j] === subject[i]) {\r\n            sameCase++;\r\n          }\r\n          sumPos += i;\r\n          count++;\r\n          break;\r\n        }\r\n      }\r\n      if (i === m) {\r\n        break;\r\n      }\r\n    }\r\n    if (count < 2) {\r\n      return emptyAcronymResult;\r\n    }\r\n    fullWord = count === n ? isAcronymFullWord(subject, subject_lw, query, count) : false;\r\n    score = scorePattern(count, n, sameCase, true, fullWord);\r\n    return new AcronymResult(score, sumPos / count, count + sepCount);\r\n  };\r\n\r\n  isAcronymFullWord = function(subject, subject_lw, query, nbAcronymInQuery) {\r\n    var count, i, m, n;\r\n    m = subject.length;\r\n    n = query.length;\r\n    count = 0;\r\n    if (m > 12 * n) {\r\n      return false;\r\n    }\r\n    i = -1;\r\n    while (++i < m) {\r\n      if (isWordStart(i, subject, subject_lw) && ++count > nbAcronymInQuery) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n}).call(this);\r\n"]},"metadata":{},"sourceType":"script"}