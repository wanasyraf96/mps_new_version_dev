{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst PROTOCOL_REGEX = /^[a-z]+:/;\nconst ORIGIN_REGEX = /^(?:[a-z]+:?:)?(?:\\/\\/)?([^\\/\\?]+)/;\nlet useSafeHref = true;\nlet globalOrigin = typeof window !== 'undefined' ? window.location.origin : false;\n\nfunction configureSafeHref(configObject) {\n  if (typeof configObject.enabled === 'boolean') {\n    useSafeHref = configObject.enabled;\n  }\n\n  if (configObject.origin) {\n    globalOrigin = configObject.origin;\n  }\n}\n\nexports.configureSafeHref = configureSafeHref;\n\nfunction getUseSafeHref() {\n  return useSafeHref;\n}\n\nexports.getUseSafeHref = getUseSafeHref;\n\nfunction getURLInfo(url) {\n  const safeProtocols = ['http:', 'https:', 'mailto:', 'tel:', 'data:'];\n  const protocolResult = url.match(PROTOCOL_REGEX);\n  const originResult = url.match(ORIGIN_REGEX);\n  const urlProtocol = protocolResult ? protocolResult[0] : 'relative';\n  let sameOrigin = urlProtocol === 'relative';\n\n  if (!sameOrigin && globalOrigin) {\n    sameOrigin = globalOrigin === (originResult && originResult[0]);\n  }\n\n  const isSafeProtocol = sameOrigin ? true : safeProtocols.includes(urlProtocol);\n\n  if (!isSafeProtocol) {\n    console.error('ðŸ“¦ `href` passed to anchor tag is unsafe. Because of this, the `href` on the element was not set. Please review the safe href documentation if you have questions.', 'https://www.github.com/segmentio/ui-box');\n    return {\n      url: undefined,\n      sameOrigin\n    };\n  }\n\n  return {\n    url,\n    sameOrigin\n  };\n}\n\nexports.getURLInfo = getURLInfo;\n\nfunction extractAnchorProps(href, rel) {\n  const urlInfo = getURLInfo(href);\n  const safeHref = urlInfo.url;\n  let safeRel = rel || '';\n\n  if (urlInfo.url) {\n    if (!safeRel.includes('noopener')) {\n      safeRel += `${safeRel.length > 0 ? ' ' : ''}noopener`;\n    }\n\n    if (!safeRel.includes('noreferrer') && !urlInfo.sameOrigin) {\n      safeRel += `${safeRel.length > 0 ? ' ' : ''}noreferrer`;\n    }\n  }\n\n  return {\n    safeHref,\n    safeRel\n  };\n}\n\nexports.extractAnchorProps = extractAnchorProps;","map":{"version":3,"sources":["../../../src/utils/safeHref.ts"],"names":[],"mappings":";;;;;AAUA,MAAM,cAAc,GAAG,UAAvB;AACA,MAAM,YAAY,GAAG,oCAArB;AACA,IAAI,WAAW,GAAG,IAAlB;AACA,IAAI,YAAY,GAAG,OAAO,MAAP,KAAkB,WAAlB,GAAgC,MAAM,CAAC,QAAP,CAAgB,MAAhD,GAAyD,KAA5E;;AAEA,SAAgB,iBAAhB,CAAkC,YAAlC,EAAiE;AAC/D,MAAI,OAAO,YAAY,CAAC,OAApB,KAAgC,SAApC,EAA+C;AAC7C,IAAA,WAAW,GAAG,YAAY,CAAC,OAA3B;AACD;;AAED,MAAI,YAAY,CAAC,MAAjB,EAAyB;AACvB,IAAA,YAAY,GAAG,YAAY,CAAC,MAA5B;AACD;AACF;;AARD,OAAA,CAAA,iBAAA,GAAA,iBAAA;;AAUA,SAAgB,cAAhB,GAA8B;AAC5B,SAAO,WAAP;AACD;;AAFD,OAAA,CAAA,cAAA,GAAA,cAAA;;AAIA,SAAgB,UAAhB,CAA2B,GAA3B,EAAsC;AAIpC,QAAM,aAAa,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,SAApB,EAA+B,MAA/B,EAAuC,OAAvC,CAAtB;AAQA,QAAM,cAAc,GAAG,GAAG,CAAC,KAAJ,CAAU,cAAV,CAAvB;AACA,QAAM,YAAY,GAAG,GAAG,CAAC,KAAJ,CAAU,YAAV,CAArB;AACA,QAAM,WAAW,GAAG,cAAc,GAAG,cAAc,CAAC,CAAD,CAAjB,GAAuB,UAAzD;AACA,MAAI,UAAU,GAAG,WAAW,KAAK,UAAjC;;AACA,MAAI,CAAC,UAAD,IAAe,YAAnB,EAAiC;AAC/B,IAAA,UAAU,GAAG,YAAY,MAAM,YAAY,IAAI,YAAY,CAAC,CAAD,CAAlC,CAAzB;AACD;;AAED,QAAM,cAAc,GAAG,UAAU,GAAG,IAAH,GAAU,aAAa,CAAC,QAAd,CAAuB,WAAvB,CAA3C;;AACA,MAAI,CAAC,cAAL,EAAqB;AAKnB,IAAA,OAAO,CAAC,KAAR,CACE,oKADF,EAEE,yCAFF;AAIA,WAAO;AACL,MAAA,GAAG,EAAE,SADA;AAEL,MAAA;AAFK,KAAP;AAID;;AAKD,SAAO;AACL,IAAA,GADK;AAEL,IAAA;AAFK,GAAP;AAID;;AA3CD,OAAA,CAAA,UAAA,GAAA,UAAA;;AA6CA,SAAgB,kBAAhB,CAAmC,IAAnC,EAAiD,GAAjD,EAA4D;AAI1D,QAAM,OAAO,GAAG,UAAU,CAAC,IAAD,CAA1B;AACA,QAAM,QAAQ,GAAG,OAAO,CAAC,GAAzB;AAMA,MAAI,OAAO,GAAG,GAAG,IAAI,EAArB;;AACA,MAAI,OAAO,CAAC,GAAZ,EAAiB;AACf,QAAI,CAAC,OAAO,CAAC,QAAR,CAAiB,UAAjB,CAAL,EAAmC;AACjC,MAAA,OAAO,IAAI,GAAG,OAAO,CAAC,MAAR,GAAiB,CAAjB,GAAqB,GAArB,GAA2B,EAAE,UAA3C;AACD;;AAED,QAAI,CAAC,OAAO,CAAC,QAAR,CAAiB,YAAjB,CAAD,IAAmC,CAAC,OAAO,CAAC,UAAhD,EAA4D;AAC1D,MAAA,OAAO,IAAI,GAAG,OAAO,CAAC,MAAR,GAAiB,CAAjB,GAAqB,GAArB,GAA2B,EAAE,YAA3C;AACD;AACF;;AAED,SAAO;AACL,IAAA,QADK;AAEL,IAAA;AAFK,GAAP;AAID;;AA1BD,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst PROTOCOL_REGEX = /^[a-z]+:/;\r\nconst ORIGIN_REGEX = /^(?:[a-z]+:?:)?(?:\\/\\/)?([^\\/\\?]+)/;\r\nlet useSafeHref = true;\r\nlet globalOrigin = typeof window !== 'undefined' ? window.location.origin : false;\r\nfunction configureSafeHref(configObject) {\r\n    if (typeof configObject.enabled === 'boolean') {\r\n        useSafeHref = configObject.enabled;\r\n    }\r\n    if (configObject.origin) {\r\n        globalOrigin = configObject.origin;\r\n    }\r\n}\r\nexports.configureSafeHref = configureSafeHref;\r\nfunction getUseSafeHref() {\r\n    return useSafeHref;\r\n}\r\nexports.getUseSafeHref = getUseSafeHref;\r\nfunction getURLInfo(url) {\r\n    const safeProtocols = ['http:', 'https:', 'mailto:', 'tel:', 'data:'];\r\n    const protocolResult = url.match(PROTOCOL_REGEX);\r\n    const originResult = url.match(ORIGIN_REGEX);\r\n    const urlProtocol = protocolResult ? protocolResult[0] : 'relative';\r\n    let sameOrigin = urlProtocol === 'relative';\r\n    if (!sameOrigin && globalOrigin) {\r\n        sameOrigin = globalOrigin === (originResult && originResult[0]);\r\n    }\r\n    const isSafeProtocol = sameOrigin ? true : safeProtocols.includes(urlProtocol);\r\n    if (!isSafeProtocol) {\r\n        console.error('ðŸ“¦ `href` passed to anchor tag is unsafe. Because of this, the `href` on the element was not set. Please review the safe href documentation if you have questions.', 'https://www.github.com/segmentio/ui-box');\r\n        return {\r\n            url: undefined,\r\n            sameOrigin\r\n        };\r\n    }\r\n    return {\r\n        url,\r\n        sameOrigin\r\n    };\r\n}\r\nexports.getURLInfo = getURLInfo;\r\nfunction extractAnchorProps(href, rel) {\r\n    const urlInfo = getURLInfo(href);\r\n    const safeHref = urlInfo.url;\r\n    let safeRel = rel || '';\r\n    if (urlInfo.url) {\r\n        if (!safeRel.includes('noopener')) {\r\n            safeRel += `${safeRel.length > 0 ? ' ' : ''}noopener`;\r\n        }\r\n        if (!safeRel.includes('noreferrer') && !urlInfo.sameOrigin) {\r\n            safeRel += `${safeRel.length > 0 ? ' ' : ''}noreferrer`;\r\n        }\r\n    }\r\n    return {\r\n        safeHref,\r\n        safeRel\r\n    };\r\n}\r\nexports.extractAnchorProps = extractAnchorProps;\r\n//# sourceMappingURL=safeHref.js.map"]},"metadata":{},"sourceType":"script"}