{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst enhancers_1 = require(\"./enhancers\");\n\nconst expand_aliases_1 = __importDefault(require(\"./expand-aliases\"));\n\nconst cache = __importStar(require(\"./cache\"));\n\nconst styles = __importStar(require(\"./styles\"));\n\nfunction enhanceProps(rawProps) {\n  const propsMap = expand_aliases_1.default(rawProps);\n  const preservedProps = {};\n  let className = rawProps.className || '';\n\n  for (const [propName, propValue] of propsMap) {\n    const cachedClassName = cache.get(propName, propValue);\n\n    if (cachedClassName) {\n      className = `${className} ${cachedClassName}`;\n      continue;\n    }\n\n    const enhancer = enhancers_1.propEnhancers[propName];\n\n    if (enhancer && (propValue === null || propValue === undefined || propValue === false)) {\n      continue;\n    } else if (!enhancer) {\n      preservedProps[propName] = propValue;\n      continue;\n    }\n\n    const newCss = enhancer(propValue);\n\n    if (newCss) {\n      styles.add(newCss.styles);\n      cache.set(propName, propValue, newCss.className);\n      className = `${className} ${newCss.className}`;\n    }\n  }\n\n  className = className.trim();\n  return {\n    className,\n    enhancedProps: preservedProps\n  };\n}\n\nexports.default = enhanceProps;","map":{"version":3,"sources":["../../src/enhance-props.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,MAAA,gBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;AACA,MAAA,KAAA,GAAA,YAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;AACA,MAAA,MAAA,GAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AAcA,SAAwB,YAAxB,CAAqC,QAArC,EAAkG;AAChG,QAAM,QAAQ,GAAG,gBAAA,CAAA,OAAA,CAAc,QAAd,CAAjB;AACA,QAAM,cAAc,GAAmB,EAAvC;AACA,MAAI,SAAS,GAAG,QAAQ,CAAC,SAAT,IAAsB,EAAtC;;AAEA,OAAK,MAAM,CAAC,QAAD,EAAW,SAAX,CAAX,IAAoC,QAApC,EAA8C;AAC5C,UAAM,eAAe,GAAG,KAAK,CAAC,GAAN,CAAU,QAAV,EAAoB,SAApB,CAAxB;;AACA,QAAI,eAAJ,EAAqB;AACnB,MAAA,SAAS,GAAG,GAAG,SAAS,IAAI,eAAe,EAA3C;AACA;AACD;;AAED,UAAM,QAAQ,GAAG,WAAA,CAAA,aAAA,CAAc,QAAd,CAAjB;;AAGA,QACE,QAAQ,KACP,SAAS,KAAK,IAAd,IAAsB,SAAS,KAAK,SAApC,IAAiD,SAAS,KAAK,KADxD,CADV,EAGE;AACA;AACD,KALD,MAKO,IAAI,CAAC,QAAL,EAAe;AAEpB,MAAA,cAAc,CAAC,QAAD,CAAd,GAA2B,SAA3B;AACA;AACD;;AAED,UAAM,MAAM,GAAG,QAAQ,CAAC,SAAD,CAAvB;;AAEA,QAAI,MAAJ,EAAY;AACV,MAAA,MAAM,CAAC,GAAP,CAAW,MAAM,CAAC,MAAlB;AACA,MAAA,KAAK,CAAC,GAAN,CAAU,QAAV,EAAoB,SAApB,EAA+B,MAAM,CAAC,SAAtC;AACA,MAAA,SAAS,GAAG,GAAG,SAAS,IAAI,MAAM,CAAC,SAAS,EAA5C;AACD;AACF;;AAED,EAAA,SAAS,GAAG,SAAS,CAAC,IAAV,EAAZ;AAEA,SAAO;AAAC,IAAA,SAAD;AAAY,IAAA,aAAa,EAAE;AAA3B,GAAP;AACD;;AAtCD,OAAA,CAAA,OAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst enhancers_1 = require(\"./enhancers\");\r\nconst expand_aliases_1 = __importDefault(require(\"./expand-aliases\"));\r\nconst cache = __importStar(require(\"./cache\"));\r\nconst styles = __importStar(require(\"./styles\"));\r\nfunction enhanceProps(rawProps) {\r\n    const propsMap = expand_aliases_1.default(rawProps);\r\n    const preservedProps = {};\r\n    let className = rawProps.className || '';\r\n    for (const [propName, propValue] of propsMap) {\r\n        const cachedClassName = cache.get(propName, propValue);\r\n        if (cachedClassName) {\r\n            className = `${className} ${cachedClassName}`;\r\n            continue;\r\n        }\r\n        const enhancer = enhancers_1.propEnhancers[propName];\r\n        if (enhancer &&\r\n            (propValue === null || propValue === undefined || propValue === false)) {\r\n            continue;\r\n        }\r\n        else if (!enhancer) {\r\n            preservedProps[propName] = propValue;\r\n            continue;\r\n        }\r\n        const newCss = enhancer(propValue);\r\n        if (newCss) {\r\n            styles.add(newCss.styles);\r\n            cache.set(propName, propValue, newCss.className);\r\n            className = `${className} ${newCss.className}`;\r\n        }\r\n    }\r\n    className = className.trim();\r\n    return { className, enhancedProps: preservedProps };\r\n}\r\nexports.default = enhanceProps;\r\n//# sourceMappingURL=enhance-props.js.map"]},"metadata":{},"sourceType":"script"}